<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.kevin" use-default-filters="true">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>


    <!-- 真正可以产生Connection的ConnectionFactory，由对应的JMS服务厂商提供 -->
    <bean id="activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616"/>
        <property name="trustedPackages">
            <list>
                <value>com.kevin.domain</value>
            </list>
        </property>
    </bean>

    <!-- 使用PooledConnectionFactory -->
    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="connectionFactory" ref="activeMQConnectionFactory"/>
        <property name="maxConnections" value="5"/>
    </bean>

    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="cachingConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <!-- 目标ConnectionFactory，对应真正可以产生JMS连接的连接工厂 -->
        <property name="targetConnectionFactory" ref="pooledConnectionFactory"/>
    </bean>

    <!-- 配置消息队列 -->
    <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg name="name" value="queue1"/>
    </bean>

    <!-- 配置JmsTemplate，该工具类可以辅助消息发送和接收 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="defaultDestination" ref="queueDestination"/>
    </bean>

    <!-- 消息生产者 -->
    <bean id="messageProducer" class="com.kevin.mq.producer.queue.MyMessageProducer">
        <property name="jmsTemplate" ref="jmsTemplate"/>
    </bean>

    <!-- 消息消费者 -->
    <bean id="messageConsumer" class="com.kevin.mq.consumer.queue.MyMessageConsumer">
        <property name="jmsTemplate" ref="jmsTemplate"/>
    </bean>

    <!--****************使用消息监听器***************-->
    <!-- 定义消息队列 -->
    <bean id="queueDestination2" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg name="name" value="queue2"/>
    </bean>

    <!-- 配置消息监听器 -->
    <bean id="messageListener" class="com.kevin.mq.consumer.queue.MyMessageListener"/>

    <!-- 配置消息监听器容器 -->
    <bean id="messageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="queueDestination2"/>
        <property name="messageListener" ref="messageListener"/>
    </bean>

    <!--*************采用Pub/Sub消息传递模式*************-->
    <!-- 配置消息主题 -->
    <bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg name="name" value="queue3"/>
    </bean>

    <!-- 配置JmsTemplate，该工具类可以辅助消息发送和接收 -->
    <bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="pubSubDomain" value="true"/>
        <property name="defaultDestination" ref="topicDestination"/>
    </bean>

    <!-- 配置发布者 -->
    <bean id="topicPublisher" class="com.kevin.mq.producer.topic.MyTopicPublisher">
        <property name="jmsTemplate" ref="jmsTopicTemplate"/>
    </bean>

    <!-- 配置消息监听器，可以配置多个，即多个订阅者 -->
    <bean id="topicMessageListener" class="com.kevin.mq.consumer.topic.TopicMessageListener"/>

    <!-- 配置消息监听器容器，可以配置多个，即多个订阅者 -->
    <bean id="topicMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="topicDestination"/>
        <property name="messageListener" ref="topicMessageListener"/>
    </bean>

    <!--****************配置使用SessionAwareMessageListener-->
    <!-- 配置消息主题 -->
    <bean id="topicDestination2" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg name="name" value="queue4"/>
    </bean>

    <!-- 配置消息监听器 -->
    <bean id="sessionAwareMessageListener" class="com.kevin.mq.consumer.topic.MySessionAwareMessageListener">
        <property name="destination" ref="queueDestination2"/>
    </bean>

    <!-- 配置消息监听器容器 -->
    <bean id="sessionAwareListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="topicDestination2"/>
        <property name="messageListener" ref="sessionAwareMessageListener"/>
    </bean>

    <!--****************配置使用MessageListenerAdapter-->
    <!-- 配置消息队列 -->
    <bean id="queueDestination3" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg name="name" value="queue5"/>
    </bean>

    <!-- 配置消息监听器 -->
    <bean id="messageListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
        <!-- 指定处理转换后的消息的类 -->
        <property name="delegate">
            <bean class="com.kevin.mq.consumer.queue.MyMessageListener2"/>
        </property>
        <!-- 调用指定的方法处理转换后的消息 -->
        <property name="defaultListenerMethod" value="receiveMessage"/>
    </bean>

    <!-- 配置消息监听容器 -->
    <bean id="messageListenerAdapterContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="queueDestination3"/>
        <property name="messageListener" ref="messageListenerAdapter"/>
    </bean>

    <!--****************配置使用MessageListenerAdapter自动回复消息到指定目的地**通过setJMSReplyTo()方法**************-->
    <!-- 配置消息队列 -->
    <bean id="queueDestination4" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg name="name" value="queueDestination4"/>
    </bean>

    <!-- 配置生产者 -->
    <bean id="messageProducer2" class="com.kevin.mq.producer.queue.MyMessageProducer2">
        <property name="jmsTemplate" ref="jmsTemplate"/>
        <property name="responseDestination" ref="responseQueue"/>
    </bean>

    <!-- 配置消息监听器 -->
    <bean id="messageListenerAdapter2" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
        <!-- 指定处理转换后的消息的类 -->
        <property name="delegate">
            <bean class="com.kevin.mq.consumer.queue.MyMessageListener3"/>
        </property>
        <!-- 调用指定的方法处理转换后的消息 -->
        <property name="defaultListenerMethod" value="receiveMessage"/>
    </bean>

    <!-- 配置消息监听容器 -->
    <bean id="messageListenerAdapterContainer2" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="queueDestination4"/>
        <property name="messageListener" ref="messageListenerAdapter2"/>
    </bean>

    <!-- 配置接收回复消息的消息队列responseQueue -->
    <bean id="responseQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg name="name" value="responseQueue"/>
    </bean>

    <!-- 配置responseQueue对应的消息监听器 -->
    <bean id="responseQueueListener" class="com.kevin.mq.consumer.queue.ResponseQueueListener">
    </bean>

    <!-- 配置responseQueue对应的消息监听器容器 -->
    <bean id="responseQueueMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="responseQueue"/>
        <property name="messageListener" ref="responseQueueListener"/>
    </bean>

    <!--*************配置使用MessageListenerAdapter自动回复消息到指定目的地**配置defaultResponseDestination属性-->
    <!-- 配置消息队列 -->
    <bean id="queueDestination5" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg name="name" value="queueDestination5"/>
    </bean>

    <!-- 配置消息监听器 -->
    <bean id="messageListenerAdapter3" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
        <!-- 指定处理转换后的消息的类 -->
        <property name="delegate">
            <bean class="com.kevin.mq.consumer.queue.MyMessageListener3"/>
        </property>
        <!-- 调用指定的方法处理转换后的消息 -->
        <property name="defaultListenerMethod" value="receiveMessage"/>
        <!-- 默认的回复消息目的地 -->
        <property name="defaultResponseDestination" ref="defaultResponseQueue"/>
    </bean>

    <!-- 配置消息监听器容器 -->
    <bean id="messageListenerContainer2" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="queueDestination5"/>
        <property name="messageListener" ref="messageListenerAdapter3"/>
    </bean>

    <!-- 配置默认的消息回复队列 -->
    <bean id="defaultResponseQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg name="name" value="defaultResponseQueue"/>
    </bean>

    <!-- defaultResponseQueue对应的消息监听器 -->
    <bean id="defaultResponseQueueListener" class="com.kevin.mq.consumer.queue.DefaultResponseQueueListener">
    </bean>

    <!-- defaultResponseQueue对应的消息监听器容器 -->
    <bean id="defaultResponseQueueMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="defaultResponseQueue"/>
        <property name="messageListener" ref="defaultResponseQueueListener"/>
    </bean>

    <!--************MessageConverter**使用MessageListener作为消息监听器**********-->
    <!-- 配置消息队列 -->
    <bean id="queueDestination6" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg name="name" value="queueDestination6"/>
    </bean>

    <!-- 配置消息转换器 -->
    <bean id="emailMessageConverter" class="com.kevin.converter.EmailMessageConverter">
    </bean>

    <!-- 配置JmsTemplate -->
    <bean id="jmsTemplate2" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="defaultDestination" ref="queueDestination6"/>
        <property name="messageConverter" ref="emailMessageConverter"/>
    </bean>

    <!-- 配置生产者 -->
    <bean id="messageProducer3" class="com.kevin.mq.producer.queue.MyMessageProducer3">
        <property name="jmsTemplate" ref="jmsTemplate2"/>
    </bean>

    <!-- 用MessageListener配置消息监听器 -->
    <bean id="messageListener4" class="com.kevin.mq.consumer.queue.MyMessageListener4">
        <property name="messageConverter" ref="emailMessageConverter"/>
    </bean>

    <!-- 配置消息监听器容器 -->
    <bean id="messageListenerContainer3" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="queueDestination6"/>
        <property name="messageListener" ref="messageListener4"/>
    </bean>

    <!--************MessageConverter**使用MessageListenerAdapter作为消息监听器**********-->
    <!-- 配置消息队列 -->
    <bean id="queueDestination7" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg name="name" value="queueDestination7"/>
    </bean>

    <!-- 用MessgeListenerAdapter配置消息监听器 -->
    <bean id="messageListenerAdapter4" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
        <!-- 指定处理转换后的消息的类 -->
        <property name="delegate">
            <bean class="com.kevin.mq.consumer.queue.MyMessageListener5"/>
        </property>
        <!-- 调用指定的方法处理转换后的消息 -->
        <property name="defaultListenerMethod" value="receiveMessage"/>
        <!-- 指定消息转换器 -->
        <property name="messageConverter" ref="emailMessageConverter"/>
    </bean>

    <!-- 配置消息监听器容器 -->
    <bean id="messageListenerContainer4" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="queueDestination7"/>
        <property name="messageListener" ref="messageListenerAdapter4"/>
    </bean>

    <!--************MessageConverter**不使用MessageConverter**********-->
    <!-- 配置消息队列 -->
    <bean id="queueDestination8" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg name="name" value="queueDestination8"/>
    </bean>

    <!-- 用MessgeListenerAdapter配置消息监听器 -->
    <bean id="messageListenerAdapter5" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
        <!-- 指定处理转换后的消息的类 -->
        <property name="delegate">
            <bean class="com.kevin.mq.consumer.queue.MyMessageListener6"/>
        </property>
        <!-- 调用指定的方法处理转换后的消息 -->
        <property name="defaultListenerMethod" value="receiveMessage"/>
        <!-- 配置不使用消息转换器 -->
        <property name="messageConverter"><null></null></property>
    </bean>

    <!-- 配置消息监听器容器 -->
    <bean id="messageListenerContainer5" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="queueDestination8"/>
        <property name="messageListener" ref="messageListenerAdapter5"/>
    </bean>

    <!--*******************使用JmsTransactionManager进行本地事务管理*************-->
    <!-- 配置消息队列 -->
    <bean id="queueDestination9" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg name="name" value="queueDestination9"/>
    </bean>

    <!-- 配置JmsTemplate -->
    <bean id="jmsTemplate3" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="defaultDestination" ref="queueDestination9"/>
    </bean>

    <!-- 配置生产者 -->
    <bean id="messageProducer4" class="com.kevin.mq.producer.queue.MyMessageProducer4">
        <property name="jmsTemplate" ref="jmsTemplate3"/>
    </bean>

    <!-- 配置消息监听器 -->
    <bean id="messageListener7" class="com.kevin.mq.consumer.queue.MyMessageListener7"/>

    <!-- 配置消息监听器容器 -->
    <bean id="messageListenerContainer6" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="destination" ref="queueDestination9"/>
        <property name="messageListener" ref="messageListener7"/>
        <!-- 配置接收消息时采用事务 -->
        <property name="sessionTransacted" value="true"/>
    </bean>
</beans>